// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                  Int          @id @default(autoincrement())
  email               String       @unique @db.VarChar(256)
  password            String       @db.VarChar(512)
  password_reset_code String?      @db.VarChar(256)
  phone               String       @unique @db.VarChar(256)
  full_name           String       @db.VarChar(128)
  avatar              String?      @db.Text
  bio                 String?      @db.Text
  active              Boolean      @default(true)
  role                Role?        @relation(fields: [role_id], references: [id], onDelete: SetNull)
  role_id             Int?
  created_at          DateTime?
  updated_at          DateTime?
  deleted_at          DateTime?
  token               Token[]
  organizations       Membership[]

  @@map("users")
}

model Token {
  id          Int      @id @default(autoincrement())
  user        User     @relation(fields: [user_id], references: [id])
  user_id     Int
  token       String   @db.Text
  expire_date DateTime

  @@map("tokens")
}

// Пока-что Админ, Модератор, Преподаватель, Студент
model Role {
  id          Int       @id @default(autoincrement())
  name        String    @db.VarChar(128)
  slug        String    @unique @db.VarChar(64)
  description String    @db.Text
  created_at  DateTime?
  updated_at  DateTime?
  deleted_at  DateTime?
  user        User[]

  @@map("roles")
}

model Membership {
  user            User         @relation(fields: [user_id], references: [id])
  user_id         Int
  organization    Organization @relation(fields: [organization_id], references: [id])
  organization_id Int

  @@id([user_id, organization_id])
  @@map("memberships")
}

model Organization {
  id          Int          @id @default(autoincrement())
  title       String       @db.VarChar(512)
  description String?      @db.Text
  avatar      String?      @db.Text
  email       String       @unique @db.VarChar(256)
  created_at  DateTime?
  updated_at  DateTime?
  deleted_at  DateTime?
  members     Membership[]

  @@map("organizations")
}

model Permission {
  id          Int       @id @default(autoincrement())
  title       String    @db.VarChar(128)
  domain      String    @db.VarChar(128)
  slug        String    @unique @db.VarChar(128)
  description String    @db.Text
  created_at  DateTime?
  updated_at  DateTime?
  deleted_at  DateTime?

  @@map("permissions")
}

model ServiceToken {
  id          Int       @id @default(autoincrement())
  title       String
  token       String
  description String?   @db.Text
  created_at  DateTime?
  updated_at  DateTime?
  deleted_at  DateTime?

  @@map("_services")
}
